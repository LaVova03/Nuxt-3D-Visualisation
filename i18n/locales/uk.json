{
  "lang": "УК",
  "label1": "Головна",
  "label2": "3Д Візуалізація",
  "articles": {
    "0": {
      "title": "Як створити Vue.js додаток",
      "text": "У цій статті ми розглянемо кроки для створення надійного Vue.js додатку з нуля. Ми охопимо всі основні аспекти, такі як керування станом, маршрутизація та кращі практики."
    },
    "1": {
      "title": "Розуміння Composition API Vue 3",
      "text": "Composition API — це велика особливість, введена у Vue 3. Вона надає новий спосіб написання компонентів Vue, що робить їх більш гнучкими та повторно використовуваними. Давайте розглянемо, як це працює."
    },
    "2": {
      "title": "Кращі практики керування станом у Vue",
      "text": "Керування станом у Vue може бути складним. У цій статті ми обговоримо кращі практики для ефективного керування станом, включаючи використання Vuex та інших технік."
    },
    "3": {
      "title": "Огляд Vue Router: Все, що потрібно знати",
      "text": "Vue Router є важливим для створення односторінкових додатків у Vue.js. У цьому посібнику ми розглянемо, як налаштувати та конфігурувати маршрутизацію, включаючи динамічні маршрути та вкладені вигляди."
    },
    "4": {
      "title": "Освоєння директив Vue.js: Детальний огляд",
      "text": "Директиви Vue.js є потужним інструментом для маніпулювання DOM. У цій статті ми розглянемо вбудовані директиви та як ви можете створювати власні для покращення ваших Vue-додатків."
    },
    "5": {
      "title": "Vue 3 проти Vue 2: Ключові відмінності та покращення",
      "text": "Vue 3 впроваджує багато важливих змін та нових можливостей. Ця стаття порівнює Vue 3 з Vue 2, підкреслюючи ключові відмінності та покращення, щоб допомогти вам зробити обґрунтований вибір."
    }
  }
}
